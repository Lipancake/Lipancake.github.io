"use strict";(self.webpackChunkvuepress_theme_hope_template=self.webpackChunkvuepress_theme_hope_template||[]).push([[878],{4067:(e,n,i)=>{i.r(n),i.d(n,{data:()=>l});const l=JSON.parse('{"key":"v-0c214cfc","path":"/posts/Lab/Lab01.html","title":"CS61a Lab 1","lang":"zh-CN","frontmatter":{"icon":"edit","date":"2022-01-01T00:00:00.000Z","category":["CategoryA"],"tag":["tag A","tag B"],"summary":"--- icon: edit date: 2022-01-01 category:\\rCategoryA; tag:\\rtag A; \\rtag B; --- CS61a Lab 1 Variables & Functions, Control Link to this section: Q1-3: WWPD 自己跑一遍代码 Q4: Falling Factori","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-v2-demo.mrhope.site/posts/Lab/Lab01.html"}],["meta",{"property":"og:site_name","content":"一个普通的网站"}],["meta",{"property":"og:title","content":"CS61a Lab 1"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2022-08-01T06:41:12.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"article:tag","content":"tag A"}],["meta",{"property":"article:tag","content":"tag B"}],["meta",{"property":"article:published_time","content":"2022-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2022-08-01T06:41:12.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"Q1-3: WWPD","slug":"q1-3-wwpd","children":[]},{"level":2,"title":"Q4: Falling Factorial","slug":"q4-falling-factorial","children":[]},{"level":2,"title":"Q5: Sum Digits","slug":"q5-sum-digits","children":[]},{"level":2,"title":"Q7: Double Eights","slug":"q7-double-eights","children":[]}],"git":{"createdTime":1659336072000,"updatedTime":1659336072000,"contributors":[{"name":"LiPancake","email":"370981991@qq.com","commits":1}]},"readingTime":{"minutes":1.63,"words":490},"filePathRelative":"posts/Lab/Lab01.md","localizedDate":"2022年1月1日"}')},767:(e,n,i)=>{i.r(n),i.d(n,{default:()=>C});var l=i(6252);const s=(0,l._)("h1",{id:"cs61a-lab-1",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#cs61a-lab-1","aria-hidden":"true"},"#"),(0,l.Uk)(" CS61a Lab 1")],-1),a=(0,l._)("h1",{id:"variables-functions-control",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#variables-functions-control","aria-hidden":"true"},"#"),(0,l.Uk)(" Variables & Functions, Control")],-1),t=(0,l.Uk)("Link to this section: "),r={href:"https://inst.eecs.berkeley.edu/~cs61a/fa20/lab/lab01/",target:"_blank",rel:"noopener noreferrer"},u=(0,l.Uk)("https://inst.eecs.berkeley.edu/~cs61a/fa20/lab/lab01/"),d=(0,l._)("h2",{id:"q1-3-wwpd",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#q1-3-wwpd","aria-hidden":"true"},"#"),(0,l.Uk)(" Q1-3: WWPD")],-1),c=(0,l._)("p",null,"自己跑一遍代码",-1),m=(0,l._)("h2",{id:"q4-falling-factorial",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#q4-falling-factorial","aria-hidden":"true"},"#"),(0,l.Uk)(" Q4: Falling Factorial")],-1),b=(0,l._)("p",null,'Let\'s write a function falling, which is a "falling" factorial that takes two arguments, n and k, and returns the product of k consecutive numbers, starting from n and working downwards.',-1),_=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def falling(n, k):\n    """Compute the falling factorial of n to depth k.\n\n    >>> falling(6, 3)  # 6 * 5 * 4\n    120\n    >>> falling(4, 3)  # 4 * 3 * 2\n    24\n    >>> falling(4, 1)  # 4\n    4\n    >>> falling(4, 0)\n    1\n    """\n    "*** YOUR CODE HERE ***"\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),o=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def falling(n, k):\n    """Compute the falling factorial of n to depth k.\n\n    >>> falling(6, 3)  # 6 * 5 * 4\n    120\n    >>> falling(4, 3)  # 4 * 3 * 2\n    24\n    >>> falling(4, 1)  # 4\n    4\n    >>> falling(4, 0)\n    1\n    """\n    "*** YOUR CODE HERE ***"\n    total = 1\n    while k > 0:\n        total = total * (n-k+1)\n        k -= 1\n    return total\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),v=(0,l._)("h2",{id:"q5-sum-digits",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#q5-sum-digits","aria-hidden":"true"},"#"),(0,l.Uk)(" Q5: Sum Digits")],-1),g=(0,l._)("p",null,"Write a function that takes in a nonnegative integer and sums its digits. (Using floor division and modulo might be helpful here!)",-1),h=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def sum_digits(y):\n    """Sum all the digits of y.\n\n    >>> sum_digits(10) # 1 + 0 = 1\n    1\n    >>> sum_digits(4224) # 4 + 2 + 2 + 4 = 12\n    12\n    >>> sum_digits(1234567890)\n    45\n    >>> a = sum_digits(123) # make sure that you are using return rather than print\n    >>> a\n    6\n    """\n    "*** YOUR CODE HERE ***"\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),p=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def sum_digits(y):\n    """Sum all the digits of y.\n\n    >>> sum_digits(10) # 1 + 0 = 1\n    1\n    >>> sum_digits(4224) # 4 + 2 + 2 + 4 = 12\n    12\n    >>> sum_digits(1234567890)\n    45\n    >>> a = sum_digits(123) # make sure that you are using return rather than print\n    >>> a\n    6\n    """\n    "*** YOUR CODE HERE ***"\n    total = 0\n    while y > 0:\n        y, b = y // 10, y % 10\n        total = total + b\n    return total\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),f=(0,l._)("h2",{id:"q7-double-eights",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#q7-double-eights","aria-hidden":"true"},"#"),(0,l.Uk)(" Q7: Double Eights")],-1),w=(0,l._)("p",null,"Write a function that takes in a number and determines if the digits contain two adjacent 8s.",-1),x=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def double_eights(n):\n    """Return true if n has two eights in a row.\n    >>> double_eights(8)\n    False\n    >>> double_eights(88)\n    True\n    >>> double_eights(2882)\n    True\n    >>> double_eights(880088)\n    True\n    >>> double_eights(12345)\n    False\n    >>> double_eights(80808080)\n    False\n    """\n    "*** YOUR CODE HERE ***"\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),k=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def double_eights(n):\n    """Return true if n has two eights in a row.\n    >>> double_eights(8)\n    False\n    >>> double_eights(88)\n    True\n    >>> double_eights(2882)\n    True\n    >>> double_eights(880088)\n    True\n    >>> double_eights(12345)\n    False\n    >>> double_eights(80808080)\n    False\n    """\n    "*** YOUR CODE HERE ***"\n    while n >=88 :\n        if (n % 100 == 88):\n            return True\n        else:\n            return double_eights(n // 10)\n    return False\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),y=(0,l._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,l._)("pre",{class:"language-text"},[(0,l._)("code",null,'def double_eights(n):\n    """Return true if n has two eights in a row.\n    >>> double_eights(8)\n    False\n    >>> double_eights(88)\n    True\n    >>> double_eights(2882)\n    True\n    >>> double_eights(880088)\n    True\n    >>> double_eights(12345)\n    False\n    >>> double_eights(80808080)\n    False\n    """\n    "*** YOUR CODE HERE ***"\n    number = str(n)\n    length = len(number)\n    count = 0\n    for i in range(0, length):\n        if (count == 1 and number[i] == \'8\'):\n            return True\n        if number[i] == \'8\':\n            count = 1\n        else:\n            count = 0\n    return False\n')]),(0,l._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"}),(0,l._)("div",{class:"line-number"})])],-1),E={},C=(0,i(3744).Z)(E,[["render",function(e,n){const i=(0,l.up)("ExternalLinkIcon"),E=(0,l.up)("CodeTabs");return(0,l.wg)(),(0,l.iD)("div",null,[s,a,(0,l._)("p",null,[t,(0,l._)("a",r,[u,(0,l.Wm)(i)])]),d,c,m,b,(0,l.Wm)(E,{data:[{title:"Question"},{title:"Answer"}],"tab-id":"Q1"},{tab0:(0,l.w5)((({title:e,value:n,isActive:i})=>[_])),tab1:(0,l.w5)((({title:e,value:n,isActive:i})=>[o])),_:1}),v,g,(0,l.Wm)(E,{data:[{title:"Question"},{title:"Answer"}],"tab-id":"Q1"},{tab0:(0,l.w5)((({title:e,value:n,isActive:i})=>[h])),tab1:(0,l.w5)((({title:e,value:n,isActive:i})=>[p])),_:1}),f,w,(0,l.Wm)(E,{data:[{title:"Question"},{title:"Answer"},{title:"Answer2"}],"tab-id":"Q1"},{tab0:(0,l.w5)((({title:e,value:n,isActive:i})=>[x])),tab1:(0,l.w5)((({title:e,value:n,isActive:i})=>[k])),tab2:(0,l.w5)((({title:e,value:n,isActive:i})=>[y])),_:1})])}]])}}]);